Semana 2 - (02/12 - 05/12)

Regressão Logística:
	- Modelo de classificação

	- Matriz confusão
		. Identifica os true positives(TP), true negatives(TN), false positives(FP) e false negatives(FN)

	- Classificação
		. Confirmed vs Predicted
		. Precision (TP / (TP + FP))
		. Recall (TP / (FN + TP))
		. Accuracy ((TP + TN) / TOTAL)
		. F1-Score (2 * (Precision * Recall) / (Precision + Recall))
		. Support - Número de exemplos de cada classe

KNN:
	- Classificação de acordo com a vizinhança

	- Dado um K
		. Calcula a distância de x até os outros exemplos
		. Seleciona os K elementos mais próximos
		. Atribui o valor de acordo com o elemento mais comum

	- SKLearn StandardScaler
		. Coloca as variáveis em escala para equilibrar os pesos

	- SKlearn.neighbors impor KNeighborsClassifier

	- KNN Regressor

Clustering:
	- K-means
		. Distância em relação ao centroide do cluster
		
		. Algoritmo
			- Cria um vetor com k centróides aleatoriamente
			- Calcula a distância média de todos os pontos atrelados a cada centróide
			- Atualiza a posição do centróide para o novo ponto

		. Definição de k
			- Método do cotovelo

Árvores de Decisões:
	- Regras facilmente traduzíveis para linguagem de negócios

	- Fácil implementação com if/else

	- Inicalmente criado para classificação depois estendido para regressão

	- Algoritmo básico
		. Selecionar melhor atributo A para dividir os dados
		. Para cada valor de A, crie uma sub=árvore dividindo os dados atuais
		. Caso critério de parada seja atingido volte ao passo 1

	- Algoritmo não-linear e guloso

	- Overfit vai ocorrer

	- from sklearn import tree

	- Ensemble Methods
		. Bagging
			- Treina cada modelo de forma independente utilicando bootstrap
			- Random Forest: Pode ser treinado em paralelo

		. Boosting
			- Treina cada modelo iterativamente para mitigar os erros de modelos prévios
			- Gradient-Boosted Trees: Treina apenas uma árvore por vez (sequencial)

